libkolab plugin to access to Kolab groupware 2.x data
=====================================================

The contained library classes establish a connection to the Kolab server
and manage the access to the Kolab groupware objects stored in various
IMAP folders. For reading and writing these objects, the Horde Kolab_Format
packages are used.


REQUIREMENTS
------------
* PEAR: HTTP/Request2
* PEAR: Net/URL2
* Horde 5 Kolab_Format library from https://github.com/horde/horde
  with patches from https://github.com/thomascube/horde


INSTALLATION
------------
To use local cache you need to create a dedicated table in Roundcube's database.
To do so, execute the SQL commands in SQL/<yourdatabase>.sql

Installing the Horde 5 library:

$ git clone https://github.com/thomascube/horde.git horde-git
$ cp -r horde-git/framework/Kolab_Format/lib/Horde <roundcube-dir>/plugins/libkolab/lib/Horde
$ cp -r horde-git/framework/Exception/lib/Horde/* <roundcube-dir>/plugins/libkolab/lib/Horde/
$ rm -rf horde-git


CONFIGURATION
-------------
The following options can be configured in Roundcube's main config file
or a local config file (config.inc.php) located in the plugin folder.

// Enable caching of Kolab objects in local database
$rcmail_config['kolab_cache'] = true;

// Optional override of the URL to read and trigger Free/Busy information of Kolab users
// Defaults to https://<imap-server->/freebusy
$rcmail_config['kolab_freebusy_server'] = 'https://<some-host>/<freebusy-path>';

// Set this option to disable SSL certificate checks when triggering Free/Busy (enabled by default)
$rcmail_config['kolab_ssl_verify_peer'] = false;

